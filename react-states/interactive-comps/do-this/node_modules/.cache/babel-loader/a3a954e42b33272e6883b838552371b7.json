{"ast":null,"code":"var _jsxFileName = \"/Users/austinjones/Documents/thinkful/react-states/interactive-comps/do-this/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [subscribed, setSubscribed] = useState(false);\n  console.log(\"Subscribed status:\", subscribed);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please click to subscribe to my updates!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSubscribed(!subscribed),\n      children: subscribed ? \"Unsubscribe\" : \"Subscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XftjTz7cdp66AWREUYZWTgkwWiM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/austinjones/Documents/thinkful/react-states/interactive-comps/do-this/src/App.js"],"names":["React","useState","App","subscribed","setSubscribed","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,KAAD,CAA5C;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,UAAlC;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,CAACD,UAAF,CAApC;AAAA,gBACGA,UAAU,GAAG,aAAH,GAAmB;AADhC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAXQD,G;;KAAAA,G;AAaT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [subscribed, setSubscribed] = useState(false);\n  console.log(\"Subscribed status:\", subscribed);\n  return (\n    <section>\n      <p>Please click to subscribe to my updates!</p>\n      <button onClick={() => setSubscribed(!subscribed)}>\n        {subscribed ? \"Unsubscribe\" : \"Subscribe\"}\n      </button>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/austinjones/Documents/thinkful/react-apis-hooks/effect-hook/do-this/app/src/ProfileEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileEdit() {\n  _s();\n\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    async function loadUsers() {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/users/1\");\n      const userFromAPI = await response.json();\n      setUser(userFromAPI);\n    }\n\n    loadUsers();\n  }, []); // Passing [] so that it only runs the effect once\n\n  if (user.id) {\n    // `user.id` is truthy after the API call returns\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"profileEdit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"User Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          name: \"username\",\n          type: \"text\",\n          value: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\",\n          type: \"email\",\n          value: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  return \"Loading...\";\n}\n\n_s(ProfileEdit, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n\n_c = ProfileEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileEdit\");","map":{"version":3,"sources":["/Users/austinjones/Documents/thinkful/react-apis-hooks/effect-hook/do-this/app/src/ProfileEdit.jsx"],"names":["React","useState","useEffect","ProfileEdit","user","setUser","loadUsers","response","fetch","userFromAPI","json","id","username","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeI,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAA5B;AACA,YAAMC,WAAW,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA1B;AACAL,MAAAA,OAAO,CAACI,WAAD,CAAP;AACD;;AACDH,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT,CAHoC,CAU5B;;AAER,MAAIF,IAAI,CAACO,EAAT,EAAa;AACX;AACA,wBACE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,UAA1B;AAAqC,UAAA,IAAI,EAAC,MAA1C;AAAiD,UAAA,KAAK,EAAEP,IAAI,CAACQ;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,OAAvB;AAA+B,UAAA,IAAI,EAAC,OAApC;AAA4C,UAAA,KAAK,EAAER,IAAI,CAACS;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AACD,SAAO,YAAP;AACD;;GA5BuBV,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function ProfileEdit() {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    async function loadUsers() {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/users/1\");\n      const userFromAPI = await response.json();\n      setUser(userFromAPI);\n    }\n    loadUsers();\n  }, []); // Passing [] so that it only runs the effect once\n\n  if (user.id) {\n    // `user.id` is truthy after the API call returns\n    return (\n      <form name=\"profileEdit\">\n        <div>\n          <label htmlFor=\"username\">User Name:</label>\n          <input id=\"username\" name=\"username\" type=\"text\" value={user.username} />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input id=\"email\" name=\"email\" type=\"email\" value={user.email} />\n        </div>\n      </form>\n    );\n  }\n  return \"Loading...\";\n}\n"]},"metadata":{},"sourceType":"module"}